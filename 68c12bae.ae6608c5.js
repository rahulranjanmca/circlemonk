(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{204:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return i})),t.d(r,"rightToc",(function(){return c})),t.d(r,"default",(function(){return p}));t(0);var a=t(329);function n(){return(n=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}const i={id:"graph",title:"Algo And Data Structures Interview Questions"},c=[{value:"Graph and its representations",id:"graph-and-its-representations",children:[]},{value:"Breadth First Traversal for a Graph",id:"breadth-first-traversal-for-a-graph",children:[]},{value:"Depth First Traversal for a Graph",id:"depth-first-traversal-for-a-graph",children:[]},{value:"Applications of Depth First Search",id:"applications-of-depth-first-search",children:[]},{value:"Detect Cycle in a Directed Graph",id:"detect-cycle-in-a-directed-graph",children:[]},{value:"Detect Cycle in a an Undirected Graph",id:"detect-cycle-in-a-an-undirected-graph",children:[]},{value:"Detect cycle in an undirected graph",id:"detect-cycle-in-an-undirected-graph",children:[]},{value:"Longest Path in a Directed Acyclic Graph",id:"longest-path-in-a-directed-acyclic-graph",children:[]},{value:"Topological Sorting",id:"topological-sorting",children:[]},{value:"Check whether a given graph is Bipartite or not",id:"check-whether-a-given-graph-is-bipartite-or-not",children:[]},{value:"Snake and Ladder Problem",id:"snake-and-ladder-problem",children:[]},{value:"Biconnected Components",id:"biconnected-components",children:[]},{value:"Check if a given graph is tree or not",id:"check-if-a-given-graph-is-tree-or-not",children:[]}],o={rightToc:c},d="wrapper";function p({components:e,...r}){return Object(a.b)(d,n({},o,r,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"graph-and-its-representations"},"Graph and its representations"),Object(a.b)("h3",{id:"breadth-first-traversal-for-a-graph"},"Breadth First Traversal for a Graph"),Object(a.b)("h3",{id:"depth-first-traversal-for-a-graph"},"Depth First Traversal for a Graph"),Object(a.b)("h3",{id:"applications-of-depth-first-search"},"Applications of Depth First Search"),Object(a.b)("h3",{id:"detect-cycle-in-a-directed-graph"},"Detect Cycle in a Directed Graph"),Object(a.b)("h3",{id:"detect-cycle-in-a-an-undirected-graph"},"Detect Cycle in a an Undirected Graph"),Object(a.b)("h3",{id:"detect-cycle-in-an-undirected-graph"},"Detect cycle in an undirected graph"),Object(a.b)("h3",{id:"longest-path-in-a-directed-acyclic-graph"},"Longest Path in a Directed Acyclic Graph"),Object(a.b)("h3",{id:"topological-sorting"},"Topological Sorting"),Object(a.b)("h3",{id:"check-whether-a-given-graph-is-bipartite-or-not"},"Check whether a given graph is Bipartite or not"),Object(a.b)("h3",{id:"snake-and-ladder-problem"},"Snake and Ladder Problem"),Object(a.b)("h3",{id:"biconnected-components"},"Biconnected Components"),Object(a.b)("h3",{id:"check-if-a-given-graph-is-tree-or-not"},"Check if a given graph is tree or not"))}p.isMDXComponent=!0},329:function(e,r,t){"use strict";t.d(r,"a",(function(){return o})),t.d(r,"b",(function(){return l}));var a=t(0),n=t.n(a),i=n.a.createContext({}),c=function(e){var r=n.a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):Object.assign({},r,e)),t},o=function(e){var r=c(e.components);return n.a.createElement(i.Provider,{value:r},e.children)};var d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},h=Object(a.forwardRef)((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,d=function(e,r){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===r.indexOf(a)&&(t[a]=e[a]);return t}(e,["components","mdxType","originalType","parentName"]),h=c(t),l=a,s=h[o+"."+l]||h[l]||p[l]||i;return t?n.a.createElement(s,Object.assign({},{ref:r},d,{components:t})):n.a.createElement(s,Object.assign({},{ref:r},d))}));function l(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,c=new Array(i);c[0]=h;var o={};for(var p in r)hasOwnProperty.call(r,p)&&(o[p]=r[p]);o.originalType=e,o[d]="string"==typeof e?e:a,c[1]=o;for(var l=2;l<i;l++)c[l]=t[l];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);