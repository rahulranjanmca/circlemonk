(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{148:function(r,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return a})),n.d(e,"rightToc",(function(){return i})),n.d(e,"default",(function(){return m}));n(0);var t=n(277);function o(){return(o=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(r[t]=n[t])}return r}).apply(this,arguments)}const a={id:"dynamic-programming",title:"Algo And Data Structures Interview Questions"},i=[],s={rightToc:i},c="wrapper";function m({components:r,...e}){return Object(t.b)(c,o({},s,e,{components:r,mdxType:"MDXLayout"}),Object(t.b)("p",null,"Linear Search, Binary Search, Jump Search, Interpolation Search, Exponential Search, Ternary Search\nSelection Sort, Bubble Sort, Insertion Sort, Merge Sort, Heap Sort, QuickSort, Radix Sort, Counting Sort, Bucket Sort, ShellSort, Comb Sort, Pigeonhole Sort, Cycle Sort\nInterpolation search vs Binary search\nStability in sorting algorithms\nWhen does the worst case of Quicksort occur?\nLower bound for comparison based sorting algorithms\nWhich sorting algorithm makes minimum number of memory writes?\nFind the Minimum length Unsorted Subarray, sorting which makes the complete array sorted\nMerge Sort for Linked Lists\nSort a nearly sorted (or K sorted) array\nIterative Quick Sort\nQuickSort on Singly Linked List\nQuickSort on Doubly Linked List\nFind k closest elements to a given value\nSort n numbers in range from 0 to n^2 \u2013 1 in linear time\nA Problem in Many Binary Search Implementations\nSearch in an almost sorted array\nSort an array in wave form\nWhy is Binary Search preferred over Ternary Search?\nK\u2019th Smallest/Largest Element in Unsorted Array\nK\u2019th Smallest/Largest Element in Unsorted Array in Expected Linear Time\nK\u2019th Smallest/Largest Element in Unsorted Array in Worst Case Linear Time\nFind the closest pair from two sorted arrays\nFind common elements in three sorted arrays\nGiven a sorted array and a number x, find the pair in array whose sum is closest to x\nCount 1\u2019s in a sorted binary array\nBinary Insertion Sort\nInsertion Sort for Singly Linked List\nWhy Quick Sort preferred for Arrays and Merge Sort for Linked Lists?\nMerge Sort for Doubly Linked List\nMinimum adjacent swaps to move maximum and minimum to corners"))}m.isMDXComponent=!0},277:function(r,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return u}));var t=n(0),o=n.n(t),a=o.a.createContext({}),i=function(r){var e=o.a.useContext(a),n=e;return r&&(n="function"==typeof r?r(e):Object.assign({},e,r)),n},s=function(r){var e=i(r.components);return o.a.createElement(a.Provider,{value:e},r.children)};var c="mdxType",m={inlineCode:"code",wrapper:function(r){var e=r.children;return o.a.createElement(o.a.Fragment,{},e)}},l=Object(t.forwardRef)((function(r,e){var n=r.components,t=r.mdxType,a=r.originalType,s=r.parentName,c=function(r,e){var n={};for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&-1===e.indexOf(t)&&(n[t]=r[t]);return n}(r,["components","mdxType","originalType","parentName"]),l=i(n),u=t,p=l[s+"."+u]||l[u]||m[u]||a;return n?o.a.createElement(p,Object.assign({},{ref:e},c,{components:n})):o.a.createElement(p,Object.assign({},{ref:e},c))}));function u(r,e){var n=arguments,t=e&&e.mdxType;if("string"==typeof r||t){var a=n.length,i=new Array(a);i[0]=l;var s={};for(var m in e)hasOwnProperty.call(e,m)&&(s[m]=e[m]);s.originalType=r,s[c]="string"==typeof r?r:t,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"}}]);